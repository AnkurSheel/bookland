parameters:
    deployScriptParams: '' # defaults for any parameters that aren't specified
    netlifySiteId: 'defaultID'
    netlifyToken: 'defaultToken'
    message: ''

jobs:
    - job: Build_And_Deploy

      pool:
          vmImage: 'ubuntu-latest'

      steps:
          - bash: echo "##vso[build.updatebuildnumber]${{ parameters.message }}" # Update build number in Pipeline UI

          - checkout: self
            fetchDepth: 1

          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
                versionSpec: '14.x'

          - task: Cache@2
            inputs:
                key: '15May22 | yarn | "$(Agent.OS)" | node/yarn.lock'
                restoreKeys: '15May22 | yarn | "$(Agent.OS)" | node/yarn.lock'
                path: $(YARN_CACHE_FOLDER)
            displayName: Cache Yarn packages

          - script: yarn install --frozen-lockfile
            displayName: 'Install dependencies'
            workingDirectory: $(Build.SourcesDirectory)/node

          - bash: npx tailwind build -c ./tailwind.config.js -i ../src/$(PROJECT_FOLDER)/input/assets/_site.css -o ../src/$(PROJECT_FOLDER)/input/assets/styles.css --minify
            displayName: 'Compile Tailwind'
            workingDirectory: $(Build.SourcesDirectory)/node

          - script: dotnet run --project ./src/$(PROJECT_FOLDER)/ --configuration Release
            displayName: Build

          #          - task: DotNetCoreCLI@2
          #            inputs:
          #              command: test
          #              projects: '**/*Tests/*.csproj'
          #              arguments: '--configuration Release'
          #              publishTestResults: true

          - script: |
                DEPLOY_URL=`yarn netlify deploy --site ${{ parameters.netlifySiteId }} --auth ${{ parameters.netlifyToken }} ${{ parameters.deployScriptParams }} --dir=../output --json | jq --slurp --raw-input --raw-output 'split("\n") | .[5] | split("\"") | .[3]'`
                # DEPLOY_URL="https://$DEPLOY_ID--ankursheel.netlify.com/"
                echo "##vso[task.setvariable variable=DEPLOY_URL;isOutput=true]$DEPLOY_URL"
            displayName: 'Deploy to Netlify'
            name: deployToNetlify
            workingDirectory: $(Build.SourcesDirectory)/node
